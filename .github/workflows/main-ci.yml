name: Hugin CLI Main Pipeline

env:
  GITHUB_REGISTRY: 'ghcr.io'
  GITHUB_OWNER: 'kryptokrona'
  GITHUB_DOCKER_IMAGE: 'hugin-cli'
  BUILD_TYPE: Release

on:
  push:
    branches:
      - master

jobs:
  build:
    name: "Build: ${{ matrix.config.name }}"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: true
      matrix:
        config:
          - {
            name: "Windows Latest MSVC / x64",
            artifact: "Windows-MSVC-x64",
            os: windows-latest,
            cc: "cl",
            environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            architecture: x64
          }
          - {
            name: "Ubuntu Latest GCC / x64",
            artifact: "ubuntu-latest-x64",
            os: ubuntu-22.04,
            cc: "gcc",
            architecture: x64
          }
          - {
            name: "macOS-11 Clang / x64",
            artifact: "macOS-x64",
            os: macos-11,
            cc: "clang",
            architecture: x64
          }
          - {
            name: "macOS Latest Clang / arm64",
            artifact: "macOS-arm64",
            os: macos-12,
            cc: "clang", # it chooses xcode instead?
            architecture: ARM64
          }
    steps:
      - uses: actions/checkout@v2

      # Windows Latest MSVC
      - name: Install Dependencies
        if: matrix.config.name == 'Windows Latest MSVC / x64'
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: mkdir build
        if: matrix.config.name == 'Windows Latest MSVC / x64'
        run: mkdir build

      - name: Build Windows Target using Visual C++
        if: matrix.config.name == 'Windows Latest MSVC / x64'
        working-directory: build
        run: |
          cmake -G "Visual Studio 17 2022" ..
          MSBuild.exe Hugin.sln

      - name: Upload MSVC Artifact
        if: matrix.config.name == 'Windows Latest MSVC / x64'
        uses: actions/upload-artifact@v3
        with:
          name: msvc-x64
          path: |
            build/Debug/Hugin.exe

      # Ubuntu 22.04
      - name: mkdir build
        if: matrix.config.name == 'Ubuntu Latest GCC / x64'
        run: mkdir build

      - name: Build Ubuntu Target
        if: matrix.config.name == 'Ubuntu Latest GCC / x64'
        run: |
          cmake ..
          make
        working-directory: build

      - name: Upload Ubuntu Artifact
        if: matrix.config.name == 'Ubuntu Latest GCC / x64'
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-latest-x64
          path: |
            build/Hugin

      # macOS-11 Clang
      - name: Install dependencies on macOS-11
        if: matrix.config.name == 'macOS-11 Clang / x64'
        run: |
          brew install cmake ninja openssl
          ninja --version
          cmake --version

      - name: mkdir build
        if: matrix.config.name == 'macOS-11 Clang / x64'
        run: mkdir build

      - name: Build macOS-11 Target
        if: matrix.config.name == 'macOS-11 Clang / x64'
        run: |
          cmake ..
          make
        working-directory: build

      - name: Upload macOS-11 Artifact
        if: matrix.config.name == 'macOS-11 Clang / x64'
        uses: actions/upload-artifact@v3
        with:
          name: macos-11-x64
          path: |
            build/Hugin

      # macOS Latest Clang
      - name: Install dependencies on macOS
        if: matrix.config.name == 'macOS Latest Clang / arm64'
        run: |
          brew install cmake ninja openssl
          ninja --version
          cmake --version

      - name: mkdir build
        if: matrix.config.name == 'macOS Latest Clang / arm64'
        run: mkdir build

      - name: Build macOS Target
        if: matrix.config.name == 'macOS Latest Clang / arm64'
        run: |
          cmake ..
          make
        working-directory: build

      - name: Upload macOS Artifact
        if: matrix.config.name == 'macOS Latest Clang / arm64'
        uses: actions/upload-artifact@v3
        with:
          name: macos-latest-arm64
          path: |
            build/Hugin
            external/sqlcipher/config.log
